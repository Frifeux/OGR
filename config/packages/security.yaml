security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:

        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

        ldap_server:
            ldap:
                service: Symfony\Component\Ldap\Ldap
                base_dn: '%env(LDAP_BASE_DN)%'
                search_dn: '%env(LDAP_USER_DN)%'
                search_password: '%env(LDAP_USER_PASSWORD)%'
                default_roles: ROLE_USER
#                uid_key: uid

        all_users:
            chain:
                providers: [ 'app_user_provider', 'ldap_server' ]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true

            custom_authenticators:
                - App\Security\LoginFormAuthenticator

            # uncomes to use local authentication
#            provider: app_user_provider
#            custom_authenticator: App\Security\LoginFormAuthenticator

            # Uncomment to use LDAP authentication
            entry_point: form_login_ldap # witch which form to use for the connection
            provider: all_users

            form_login: true
            form_login_ldap:
                service: Symfony\Component\Ldap\Ldap
                dn_string: 'ou=users,dc=wimpi,dc=net'
#                dn_string: 'uid={username},ou=users,dc=wimpi,dc=net'
#                query_string: '(&(uid={username})(memberOf=cn=admin,ou=users,dc=wimpi,dc=net))'
                query_string: '(uid={_username})'
                search_dn: '%env(LDAP_USER_DN)%'
                search_password: '%env(LDAP_USER_PASSWORD)%' # password for the search_dn
                login_path: app_login
                check_path: app_login

            logout:
                path: app_logout
                target: app_login # where to redirect after logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/user, roles: ROLE_USER }
         - { path: ^/home, roles: ROLE_USER }
         - { path: ^/reservation, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
